<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/hexo/2020/04/04/hello-world/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">开放端口：</span><br><span class="line">centOS 7+</span><br><span class="line">firewall-cmd --permanent --zone&#x3D;public --add-port&#x3D;3306&#x2F;tcp 【3306要开放的端口，--permanent永久保存】</span><br><span class="line">firewall-cmd --query-port&#x3D;3306&#x2F;tcp 【查看3306端口是否开放】</span><br><span class="line">firewall-cmd --zone&#x3D;public --remove-port&#x3D;80&#x2F;tcp --permanent 【删除某个端口，要重启防火墙】</span><br><span class="line"></span><br><span class="line">firewall防火墙：centOS 7+</span><br><span class="line">systemctl enable firewalld.service【设置开机启用防火墙】</span><br><span class="line">systemctl disable firewalld.service【设置开机不启动防火墙】</span><br><span class="line">systemctl status firewalld  【查看防火墙状态】</span><br><span class="line">systemctl start firewalld   【开启防火墙】</span><br><span class="line">systemctl stop firewalld 【关闭防火墙】</span><br><span class="line">firewall-cmd --reload 【重启防火墙】</span><br><span class="line">垃圾垃圾</span><br><span class="line">firewall-cmd  --add-rich-rule &quot;rule family&#x3D;ipv4 source address&#x3D;135.89.65.2 reject&quot;【 reject拒绝】【accept允许 】【删除该规则把 –add-rich-rule 改成 –remove-rich-rule即可）】</span><br><span class="line">-------------------------------------------------------------------------------------------</span><br><span class="line">iptables防火墙:CentOS6.X</span><br><span class="line">service iptables status【查看防火墙状态】</span><br><span class="line">service iptables stop【停止防火墙】</span><br><span class="line">service iptables start【启动防火墙】</span><br><span class="line">service iptables restart【重启防火墙】</span><br><span class="line">chkconfig iptables off【永久关闭防火墙】 </span><br><span class="line">chkconfig iptables on【永久关闭后重启】　</span><br><span class="line">[root@stu &#x2F;]# &#x2F;sbin&#x2F;iptables -I INPUT -p tcp --dport 6379 -j ACCEPT     【6379要开放的端口】</span><br><span class="line">[root@stu &#x2F;]# &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;iptables save				【保存】</span><br><span class="line"></span><br><span class="line">查看开放文件：</span><br><span class="line">&#x2F;etc&#x2F;sysconfig&#x2F;   iptables  </span><br><span class="line">-------------------------------------------------------------------------------------------</span><br><span class="line">查看端口：</span><br><span class="line"> netstat -ntlp   【查看TCP】</span><br><span class="line"> netstat -nupl   【查看UDP】</span><br><span class="line"> ps -ef |grep tomcat【查看tomcat】</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;JDK安装：&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">rpm -qa | grep java【先查找卸载】</span><br><span class="line">rpm -e --nodeps &lt;要卸载的软件&gt;【卸载命令】</span><br><span class="line"></span><br><span class="line">上传-&gt;解压到&#x2F;usr&#x2F;local&#x2F;目录下</span><br><span class="line">yum install glibc.i686【可能需要安装这个glibc】</span><br><span class="line"></span><br><span class="line">解压；</span><br><span class="line">配置环境：打开&#x2F;etc&#x2F;profile配置文件添加</span><br><span class="line">#set java environment</span><br><span class="line">JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.7.0_71</span><br><span class="line">CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib.tools.jar</span><br><span class="line">PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</span><br><span class="line">export JAVA_HOME CLASSPATH PATH </span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile【刷新配置文件】</span><br><span class="line"></span><br><span class="line">yum install zip unzip【安装zip解压文件】</span><br><span class="line"></span><br><span class="line">查看MySQL数据库编码:show variables like &#39;character_set_%&#39;;</span><br><span class="line"></span><br><span class="line">安装MySQL：</span><br><span class="line">wget https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql80-community-release-el7-1.noarch.rpm【下载---依赖？】</span><br><span class="line">yum localinstall mysql80-community-release-el7-1.noarch.rpm【安装依赖？】</span><br><span class="line">vi  &#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community.repo 【修改要安装的版本】</span><br><span class="line">yum install mysql-community-server【安装】</span><br><span class="line"></span><br><span class="line">systemctl status mysqld  # 查看服务状态</span><br><span class="line">systemctl start mysqld   # 启动服务</span><br><span class="line">systemctl stop  mysqld   # 关闭服务</span><br><span class="line">systemctl restart mysqld   # 重启服务</span><br><span class="line"></span><br><span class="line">(1)</span><br><span class="line">service mysql status 	【查看mysql服务状态】</span><br><span class="line">service mysql stop 	【关闭mysql服务】</span><br><span class="line">service mysql restart	【重启mysql服务】</span><br><span class="line">service mysql start	【开启mysql服务】</span><br><span class="line"></span><br><span class="line">systemctl enable mysqld【开机启动】</span><br><span class="line">systemctl disable mysqld【取消开机启动】</span><br><span class="line"></span><br><span class="line">修改默认编码：【修改默认编码】</span><br><span class="line">find &#x2F; -iname &#39;*.cnf&#39; -print【查看配置文件位置，没有再复制到&#x2F;etc&#x2F;my.cnf】</span><br><span class="line"></span><br><span class="line">在[client]下添加（没有不用添加）</span><br><span class="line">default-charater-set&#x3D;utf8</span><br><span class="line">在[mysqld]下添加</span><br><span class="line">collation_server &#x3D; utf8_general_ci</span><br><span class="line">character_set_server &#x3D; utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select user,host,password from mysql.user;【查看用户】</span><br><span class="line">set password for root@localhost &#x3D; password(&#39;123&#39;);【修改密码mysql5】</span><br><span class="line">set password &#x3D; password(&#39;root&#39;);【修改密码】</span><br><span class="line">alter user &#39;root&#39;@&#39;localhost&#39;IDENTIFIED BY &#39;MyNewPass&#39;;【修改密码】</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &#39;root&#39; @&#39;%&#39; identified by &#39;root&#39;;【允许远程登录】</span><br><span class="line">flush privileges;【刷新权限表】</span><br><span class="line">create user &#39;username&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;【创建用户】</span><br><span class="line">GRANT all ON databasename.* TO &#39;username&#39;@&#39;localhost&#39;;【授权用户】</span><br><span class="line">drop user &#39;username&#39;@&#39;localhost&#39;;【删除用户】</span><br><span class="line"></span><br><span class="line">select version(); 【查看MySQL数据库版本】</span><br><span class="line"></span><br><span class="line">show variables like &#39;character_set_%&#39;;【查看编码】</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show databases;【查看已存在数据库】</span><br><span class="line">show create database myfirstdatabase;【查看数据库编码】</span><br><span class="line"></span><br><span class="line">show tables;【查看已存在数据表】</span><br><span class="line">show create table user;【查看数据表编码】</span><br><span class="line"></span><br><span class="line">alter database &lt;数据库名&gt; character set utf8;【修改已存在数据库的编码方式】</span><br><span class="line">alter table &lt;表名&gt; CONVERT TO CHARACTER SET utf8;【修改已存在数据表的编码方式】</span><br><span class="line">alter table student default character set utf8;	【修改已存在数据表的编码方式】</span><br><span class="line">alter table student convert to character set utf8;【修改字段编码】</span><br><span class="line"></span><br><span class="line">nohup java -jar shareniu.jar &gt;spring.log &amp; 【后台运行不关闭，ps -ef|grep xx,kill掉】</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;CentOS6+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;tomcat开机启动&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">1.在&#x2F;etc&#x2F;profile文件中追加tomcat的环境变量</span><br><span class="line">export CATALINA_HOME&#x3D;&#x2F;software&#x2F;apache-tomcat-7.0.55</span><br><span class="line">2.使用source &#x2F;etc&#x2F;profile使配置生效</span><br><span class="line">3.将tomcat配置为服务</span><br><span class="line">    将tomcat的脚本文件拷贝到&#x2F;etc&#x2F;inti.d目录下</span><br><span class="line">cp catalina.sh &#x2F;etc&#x2F;init.d&#x2F;tomcat7</span><br><span class="line">4.修改执行的权限 </span><br><span class="line">chmod 755 &#x2F;etc&#x2F;init.d&#x2F;tomcat7</span><br><span class="line">5.接着对拷贝的脚本进行修改,添加chkconfig和description两行注释,同时加上JAVA_HOME和CATALINA_HOME声明</span><br><span class="line">    #chkconfig: 2345 10 90</span><br><span class="line">    #description: tomcat8 service</span><br><span class="line">    export JAVA_HOME&#x3D;&#x2F;software&#x2F;jdk1.7.0_51</span><br><span class="line">    export CATALINA_HOME&#x3D;&#x2F;software&#x2F;apache-tomcat-7.0.55</span><br><span class="line">6.使用chkconfig -add tomcat7 将其添加为服务</span><br><span class="line">chkconfig --add tomcat7</span><br><span class="line">7.配置开机启动</span><br><span class="line">chkconfig tomcat7 on</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;CentOS7+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;tomcat开机启动&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">假设Tomcat的安装路径为&#x2F;usr&#x2F;local&#x2F;tomcat</span><br><span class="line"></span><br><span class="line">1 为Tomcat添加启动参数</span><br><span class="line"></span><br><span class="line">catalina.sh在执行的时候会调用同级路径下的setenv.sh来设置额外的环境变量，因此在&#x2F;opt&#x2F;tomcat&#x2F;bin路径下创建setenv.sh文件，内容如下：</span><br><span class="line"></span><br><span class="line">export CATALINA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat</span><br><span class="line">export CATALINA_BASE&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat</span><br><span class="line">#设置Tomcat的PID文件</span><br><span class="line">CATALINA_PID&#x3D;&quot;$CATALINA_BASE&#x2F;tomcat.pid&quot;</span><br><span class="line">#添加JVM选项</span><br><span class="line">JAVA_OPTS&#x3D;&quot;-server -XX:PermSize&#x3D;256M -XX:MaxPermSize&#x3D;1024m -Xms512M -Xmx1024M -XX:MaxNewSize&#x3D;256m&quot;</span><br><span class="line"></span><br><span class="line">2 编写tomcat.service文件</span><br><span class="line">在&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system路径下添加tomcat.service文件，内容如下：</span><br><span class="line"></span><br><span class="line">##[unit]配置了服务的描述，规定了在network启动之后执行，</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Tomcat</span><br><span class="line">After&#x3D;syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">##[service]配置服务的pid，服务的启动，停止，重启</span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">Environment&#x3D;&quot;JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.7.0_71&quot;  #【指定虚拟机，好多教程没讲】</span><br><span class="line">PIDFile&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;tomcat.pid</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;bin&#x2F;startup.sh</span><br><span class="line">ExecReload&#x3D;&#x2F;bin&#x2F;kill -s HUP $MAINPID</span><br><span class="line">ExecStop&#x3D;&#x2F;bin&#x2F;kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp&#x3D;true</span><br><span class="line"></span><br><span class="line">##[install]配置了使用用户</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3 将Tomcat加入服务管理</span><br><span class="line"></span><br><span class="line">systemctl enable tomcat.service【开启开机启动】</span><br><span class="line">systemctl disable tomcat.service【关闭开机启动】</span><br><span class="line">systemctl start tomcat.service【启动tomcat】</span><br><span class="line">systemctl stop tomcat.service【关闭tomcat】</span><br><span class="line">systemctl restart tomcat.service【重启tomcat】</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;快速启动tomcat8005端口&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">打开$JAVA_HOME&#x2F;jre&#x2F;lib&#x2F;security&#x2F;java.security这个文件，找到securerandom.source配置项</span><br><span class="line">修改为：</span><br><span class="line">securerandom.source&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;tomcat修改默认首页&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">ps -ef|grep tomcat【查看tomcat是否启动】</span><br><span class="line">&#x2F;&#x2F;配置tomcat端口为80在tomcat&#x2F;config&#x2F;service.xml的&lt;Connector port&#x3D;&quot;80&quot;……</span><br><span class="line"># 修改  port&#x3D;&quot;80&quot;</span><br><span class="line"></span><br><span class="line">1.在tomcat&#x2F;config&#x2F;service.xml在&lt;host&gt;&lt;&#x2F;host&gt;标签之间添加上：</span><br><span class="line"></span><br><span class="line">&lt;Context path&#x3D;&quot;&quot; docBase&#x3D;&quot;【项目名字】&quot; debug&#x3D;&quot;0&quot; reloadable&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">#path是说明虚拟目录的名字，如果你要只输入ip地址就显示主页，则该键值留为空；</span><br><span class="line"></span><br><span class="line">#docBase是虚拟目录的路径，它默认的是$tomcat&#x2F;webapps&#x2F;ROOT目录，现在我在webapps目录下建了一个myjsp目录，让该目录作为我的默认目录。</span><br><span class="line"></span><br><span class="line">#debug和reloadable一般都分别设置成0和true。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;创建触发器&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">truncate table test;  (这里假定你的表名test)【清空表和id自增长】</span><br><span class="line">SELECT * FROM ips WHERE INET_ATON(ips.netstart)&lt;&#x3D;INET_ATON(&#39;171.38.232.113&#39;)  AND INET_ATON(ips.netend)&gt;&#x3D;INET_ATON(&#39;171.38.232.113&#39;);【查询ip范围】</span><br><span class="line">update [表名] set [字段]&#x3D;replace([字段],&#39; &#39;,&#39;&#39;);【mysql清空空格】</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">1、【创建触发器】</span><br><span class="line"></span><br><span class="line">DROP TRIGGER &#96;up_uf&#96;$$</span><br><span class="line"></span><br><span class="line">CREATE</span><br><span class="line">    TRIGGER &#96;up_uf&#96; BEFORE INSERT </span><br><span class="line">ON &#96;userfind&#96; </span><br><span class="line">   FOR EACH ROW BEGIN</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"> SET new.useraddr&#x3D;(SELECT city FROM ips WHERE INET_ATON(ips.netstart)&lt;&#x3D;INET_ATON(new.uip)  AND INET_ATON(ips.netend)&gt;&#x3D;INET_ATON(new.uip));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> END;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>HEXO初始化基本设置</title>
    <url>/hexo/2020/04/04/initpage/</url>
    <content><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><ol>
<li>安装 Node    <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">下载地址</a></li>
<li>安装 Git    <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载地址</a></li>
<li>安装 Hexo</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h1 id="初始化-hexo"><a href="#初始化-hexo" class="headerlink" title="初始化 hexo"></a>初始化 hexo</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init [name]		<span class="comment">#name可选参数会创建文件夹</span></span><br><span class="line">hexo g  			<span class="comment">#生成静态页面</span></span><br><span class="line">hexo s				<span class="comment">#启动服务  指定端口：hexo s -p 8888</span></span><br><span class="line">hexo d				<span class="comment">#发布</span></span><br></pre></td></tr></table></figure>

<h1 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git  themes/next	<span class="comment">#下载主题</span></span><br></pre></td></tr></table></figure>
<h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><ul>
<li>用文本的方式打开项目根目录下的 _config.yml 配置文件，找到 <strong>theme</strong> 把原来默认的 <strong>landscape</strong> 主题名字，改成刚刚克隆的主题名字next</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme</span>: <span class="string">next</span></span><br></pre></td></tr></table></figure>

<h2 id="修改主题模式"><a href="#修改主题模式" class="headerlink" title="修改主题模式"></a>修改主题模式</h2><ul>
<li>打开主题文件夹下的 _config.yml 配置文件（注意：这里要区别，不是項目根目录，主题文件夹的路径为：新建空白文件夹名称/themes/主题文件夹名称）。通过查找功能找到 <strong>Schemes</strong> 模块，修改为 <strong>Gemini</strong> 风格。如果喜欢其他风格可以自己修改 </li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme</span>: <span class="string">Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<h2 id="修改菜单"><a href="#修改菜单" class="headerlink" title="修改菜单"></a>修改菜单</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span> </span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span>  </span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<h1 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"此处输入文章名字"</span>	<span class="comment">#或把自己的md文件放到：项目名称/source/_posts</span></span><br></pre></td></tr></table></figure>



<h1 id="分类设置"><a href="#分类设置" class="headerlink" title="分类设置"></a>分类设置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<ul>
<li>打开 <strong>categories</strong> 文件夹中的 <strong>index.md</strong> 文件，添加 <strong>type</strong> 字段，设置为 <strong>“categories”</strong>。 </li>
</ul>
<p>其他标签、关于等操作 一样</p>
<h2 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h2><ul>
<li>在文章  front-matter 中字段有多个参数的时候，tags: 标签名字 </li>
</ul>
<h1 id="Hexo-博客添加站内搜索"><a href="#Hexo-博客添加站内搜索" class="headerlink" title="Hexo 博客添加站内搜索"></a>Hexo 博客添加站内搜索</h1><ul>
<li>NexT主题支持集成 <strong>Swiftype</strong>、 微搜索、<strong>Local Search</strong> 和 <strong>Algolia</strong>。下面介绍 <strong>Local Search</strong> 的安装吧。注意：安装的时候要是项目根目录下安装。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save 	<span class="comment">#安装 hexo-generator-search</span></span><br><span class="line">npm install hexo-generator-searchdb --save  <span class="comment">#安装 hexo-generator-searchdb</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 <strong>ture</strong>。 </p>
</li>
<li><p>在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<h1 id="博客头像设置"><a href="#博客头像设置" class="headerlink" title="博客头像设置"></a>博客头像设置</h1></li>
<li><p>打开主题文件夹下的 _config.yml 配置文件，通过查找功能找到 <strong>avatar</strong>，然后把一个在线的头像图片地址（百度图片中直接复制链接即可），作为 <strong>url</strong> 的参数。 </p>
</li>
</ul>
<h2 id="设置头像圆角并旋转打开"><a href="#设置头像圆角并旋转打开" class="headerlink" title="设置头像圆角并旋转打开"></a>设置头像圆角并旋转打开</h2><ul>
<li>打开主题文件夹的 source\css_common\outline\sidebar 目录下的 sidebar-author.styl 文件，然后把下面的代码添加进去即可。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="右上角-fork-me-设置"><a href="#右上角-fork-me-设置" class="headerlink" title="右上角 fork me 设置"></a>右上角 fork me 设置</h1><p> 在 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a> 上选择你喜欢的挂饰，复制方框内的代码。 </p>
<p>打开主题文件夹下的 <strong>layout_layout.swig</strong>下面，并把 的参数，修改为自己的 github 链接（放自己要跳转的网址即可）。</p>
<h1 id="网页背景设置"><a href="#网页背景设置" class="headerlink" title="网页背景设置"></a>网页背景设置</h1><h2 id="动态背景设置"><a href="#动态背景设置" class="headerlink" title="动态背景设置"></a>动态背景设置</h2><ul>
<li><p>打开主题文件夹下的 <strong>layout</strong> 文件夹，用文本的方式打开 <strong>_layout.swig</strong> 文件，在文末加上如下的代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 动态背景 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="背景图片设置"><a href="#背景图片设置" class="headerlink" title="背景图片设置"></a>背景图片设置</h2></li>
<li><p>打开主题文件夹下的 <strong>source</strong> 文件夹，进入 <strong>css\_schemes\Pisces</strong> 文件下，用文本形式打开 <strong>index.styl</strong> 文件，然后添加下面这段代码。代码中 <strong>url</strong> 的地址是指到： 主题文件夹/source/images/ 。</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/bg.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">    <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:center;</span><br><span class="line">    // 设置主题部分的透明度，具体看图</span><br><span class="line">    <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="首页文章预览设置"><a href="#首页文章预览设置" class="headerlink" title="首页文章预览设置"></a>首页文章预览设置</h1><ul>
<li>默认情况下，文章在首页是全文显示的，这样肯定是不方便读者浏览。所以需要实现预览模式。 </li>
<li>方法一：使用 &lt; !–more–&gt; 手动切断<br>这种方法可以根据文章的内容，自己在合适的位置添加 &lt; !–more–&gt; 标签，使用灵活，也是Hexo推荐的方法。</li>
<li>方法二：添加 description<br>在文章的 front-matter 中添加 description 和 photos 字段，如果不需要显示图片的话，可以把 photos 去掉。<br>ps：不知道 front-matter 是什么的话，跳转到第二章的第4点的发布文章看下。</li>
</ul>
<h1 id="社交小图标设置"><a href="#社交小图标设置" class="headerlink" title="社交小图标设置"></a>社交小图标设置</h1><ul>
<li><p>在主题文件夹下的 _config.yml 配置文件中，搜索 <strong>Social</strong>，然后提示自己增加自己需要的小图标并设置对应连接。</p>
</li>
<li><p>图标可以到 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">Font Awesome Icon</a> 网站查找。</p>
</li>
</ul>
<h1 id="友情链接设置"><a href="#友情链接设置" class="headerlink" title="友情链接设置"></a>友情链接设置</h1><ul>
<li><p>在主题文件夹下的 _config.yml 配置文件中，搜索 <strong>links</strong>，然后根据自己的需求自己吸修改。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Links</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">Title1:</span> <span class="string">http://yoursite.com</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<h1 id="底部隐藏由Hexo强力驱动、主题–NexT-Mist"><a href="#底部隐藏由Hexo强力驱动、主题–NexT-Mist" class="headerlink" title="底部隐藏由Hexo强力驱动、主题–NexT.Mist"></a>底部隐藏由Hexo强力驱动、主题–NexT.Mist</h1><ul>
<li>在主题文件夹下，打开 layout/_partials/footer.swig 文件，注释掉相关代码如下所示，位置是文末。</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 用下面的符号注释，注释代码用下面括号括起来 --&gt;</span><br><span class="line">&lt;!-- --&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">&#123;% <span class="keyword">if</span> theme.footer.powered.enable %&#125;</span><br><span class="line">  &lt;div class="powered-by"&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __('footer.powered', next_url('https://hexo.io', 'Hexo', &#123;class: 'theme-link'&#125;)) &#125;&#125;&#123;#</span><br><span class="line">  #&#125;&#123;% if theme.footer.powered.version %&#125; v&#123;&#123; hexo_env('version') &#125;&#125;&#123;% endif %&#125;&#123;#</span><br><span class="line"> #&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> theme.footer.powered.enable and theme.footer.theme.enable %&#125;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-divider"</span>&gt;|&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;% if theme.footer.theme.enable %&#125;</span></span><br><span class="line"><span class="regexp">  &lt;div class="theme-info"&gt;&#123;#</span></span><br><span class="line"><span class="regexp">  #&#125;&#123;&#123; __('footer.theme') &#125;&#125; – &#123;&#123; next_url('https:/</span><span class="regexp">/theme-next.org', 'NexT.' + theme.scheme, &#123;class: 'theme-link'&#125;) &#125;&#125;&#123;#</span></span><br><span class="line"><span class="regexp">  #&#125;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; version &#125;&#125;&#123;% endif %&#125;&#123;#</span></span><br><span class="line"><span class="regexp">#&#125;&lt;/</span>div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> theme.footer.custom_text %&#125;</span><br><span class="line">  &lt;div class="footer-custom"&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;#</span><br><span class="line">#&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weidong_y/article/details/90904781" target="_blank" rel="noopener">参考地址</a></p>
]]></content>
      <categories>
        <category>操作类</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装FastDFS图片服务器</title>
    <url>/hexo/2020/04/10/install-FastDFS/</url>
    <content><![CDATA[<h1 id="1-依赖环境下载"><a href="#1-依赖环境下载" class="headerlink" title="1.依赖环境下载"></a>1.依赖环境下载</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y gcc-c++ <span class="comment">#需要依赖gcc</span></span><br><span class="line">yum install -y pcre <span class="comment">#用于支持rewrite模块 pcre-8.32-17</span></span><br><span class="line">yum install -y libevent <span class="comment">#FastDFS依赖libevent库 libevent-2.0.21-4.el7.x86_64</span></span><br><span class="line">yum install -y zlib zlib-devel <span class="comment">#用于支持gzip模块 zlib-1.2.7-17.el7.x86_64</span></span><br><span class="line"><span class="comment">#需要下载是文件</span></span><br><span class="line">libfastcommon-master.zip  <span class="comment">#类库</span></span><br><span class="line">fastdfs-nginx-module-master.zip <span class="comment">#nginx的fastdfs模块</span></span><br><span class="line">fastdfs100-fastdfs-master.zip  <span class="comment">#fastdfs</span></span><br><span class="line">Nginx版本：nginx-1.14.tar.gz : <span class="comment">#官网下载: http://nginx.org/en/download.html</span></span><br><span class="line"><span class="comment">#参考下载地址：</span></span><br><span class="line">https://gitee.com/fastdfs100</span><br><span class="line">https://gitee.com/fastdfs100/fastdfs-nginx-module/repository/archive/master.zip</span><br><span class="line">https://gitee.com/fastdfs100/libfastcommon/repository/archive/master.zip</span><br><span class="line">https://gitee.com/fastdfs100/fastdfs/repository/archive/master.zip</span><br></pre></td></tr></table></figure>

<h1 id="2-安装libfastcommon"><a href="#2-安装libfastcommon" class="headerlink" title="2.安装libfastcommon"></a>2.安装libfastcommon</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip libfastcommon-master.zip</span><br><span class="line"> mv libfastcommon-1.0.39 /usr/<span class="built_in">local</span>/libfastcommon</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/libfastcommon/</span><br><span class="line">./make.sh           <span class="comment">#编译</span></span><br><span class="line">./make.sh install   <span class="comment">#安装</span></span><br><span class="line"><span class="comment"># 检查确认/usr/lib64  和 /usr/lib 目录下都生成了 libfastcommon.so (有些版本可能/usr/lib下不会生成)</span></span><br><span class="line">ls /usr/lib64  | grep libfastcommon.so  </span><br><span class="line">ls /usr/lib  | grep libfastcommon.so</span><br></pre></td></tr></table></figure>

<h1 id="３-安装tracker"><a href="#３-安装tracker" class="headerlink" title="３.安装tracker"></a>３.安装tracker</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip  fastdfs100-fastdfs-master.zip</span><br><span class="line"> mv fastdfs100-fastdfs-master.zip /usr/<span class="built_in">local</span>/FastDFS</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/FastDFS/</span><br><span class="line">./make.sh &amp;&amp; ./make.sh install  <span class="comment">#编译之后接着进行安装</span></span><br><span class="line"><span class="comment">#确认安装成功,没有报错后,拷贝配置文件到/etc/fdfs</span></span><br><span class="line">cp /usr/<span class="built_in">local</span>/FastDFS/conf/* /etc/fdfs/</span><br><span class="line"><span class="comment">#,进入/etc/fdfs 目录, 如果没有tracker.conf就拷贝一份tracker.conf.sample 去掉sample</span></span><br><span class="line">cp tracker.conf.sample track.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置tracker.conf </span></span><br><span class="line">vim track.conf  <span class="comment"># 修改以下配置</span></span><br><span class="line"><span class="comment">#===============</span></span><br><span class="line">base_path=/home/fastdfs  <span class="comment">#基础目录,以后的data 和日志目录都会放在此目录下</span></span><br><span class="line">http.server_port=80 <span class="comment">#配置http服务端口,这个端口跟后面nginx的监听端口对应</span></span><br><span class="line"></span><br><span class="line">mkdir /home/fastdfs</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动tracker，运行如下命令</span></span><br><span class="line">/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart</span><br><span class="line"><span class="comment">#检查是否启动成功:默认端口22122</span></span><br><span class="line">ps -ef | grep fdfs  </span><br><span class="line"><span class="comment">#检查/home/fastdfs下是否生成data / logs 两个目录</span></span><br><span class="line">ls  /home/fastdfs/</span><br></pre></td></tr></table></figure>

<h1 id="4-安装storage"><a href="#4-安装storage" class="headerlink" title="4.安装storage"></a>4.安装storage</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/fdfs </span><br><span class="line"><span class="comment">#如果没有storage.conf  拷贝一份storage.conf.sample 命名为storage.conf</span></span><br><span class="line">cp storage.conf.sample  storage.conf</span><br><span class="line"><span class="comment">#配置storage.conf</span></span><br><span class="line">vi storage.conf  <span class="comment">#修改如下配置</span></span><br><span class="line"><span class="comment">#===========================</span></span><br><span class="line">group_name=group1 <span class="comment">#配置组名,同一个组的storage 互为备份</span></span><br><span class="line">base_path=/home/fastdfs <span class="comment">#基础目录</span></span><br><span class="line"><span class="comment">#store存放文件的位置(store_path), 可以配置多个, 记得创建路径</span></span><br><span class="line">store_path0=/home/fdfs_storage </span><br><span class="line"><span class="comment">#如果有多个挂载磁盘则定义多个store_path，如下</span></span><br><span class="line"><span class="comment">#store_path1=.....</span></span><br><span class="line"><span class="comment">#store_path2=......</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置tracker服务器:IP,阿里云服务器如果需要外部访问请配置公网ip, 不要使用私有ip</span></span><br><span class="line">tracker_server=192.168.33.111:22122</span><br><span class="line"><span class="comment">#如果有多个tracker则配置多个tracker</span></span><br><span class="line"><span class="comment">#tracker_server=192.168.33.112:22122</span></span><br><span class="line"><span class="comment">#配置http端口</span></span><br><span class="line">http.server_port=80</span><br><span class="line"><span class="comment">#==========完===========</span></span><br><span class="line"><span class="comment">#创建 /home/fdfs_storage 目录</span></span><br><span class="line">mkdir -p /home/fdfs_storage</span><br><span class="line"><span class="comment">#启动storage</span></span><br><span class="line">/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart</span><br><span class="line"><span class="comment">#查看启动是否成功</span></span><br><span class="line">fdfs_monitor /etc/fdfs/storage.conf   <span class="comment">#查看fdfs状态</span></span><br><span class="line">ps -ef | grep fdfs</span><br><span class="line"><span class="comment">#查看目录是否创建,/home/fdfs_storage/data 应该会自动生成256个文件夹</span></span><br><span class="line">ls   /home/fdfs_storage/data</span><br></pre></td></tr></table></figure>

<h1 id="5-测试上传文件"><a href="#5-测试上传文件" class="headerlink" title="5.测试上传文件"></a>5.测试上传文件</h1><p>测试文件上传需要开放tracker端口22122，storage端口23000</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/fdfs</span><br><span class="line">cp client.conf.sample  client.conf</span><br><span class="line">vim client.conf  <span class="comment">#修改如下配置</span></span><br><span class="line"><span class="comment">#=================</span></span><br><span class="line">base_path=/home/fastdfs</span><br><span class="line">tracker_server=192.168.33.111:22122</span><br><span class="line"><span class="comment">#=======完========</span></span><br><span class="line"><span class="comment">#准备一张图片进行测试</span></span><br><span class="line">/usr/bin/fdfs_test /etc/fdfs/client.conf upload  /download/fengjing.jpg</span><br><span class="line"><span class="comment">#一切正常的话会返回图片地址等信息</span></span><br><span class="line">example file url: http://192.168.33.111/group1/M00/00/00/wKghb1vqf7GAIdYqAAJo1aj_C9s003_big.jpg</span><br><span class="line"><span class="comment">#检查文件是否存在(文件名被存放在/home/fdfs_storage/data/00/00对应的目录中),如果存在即是保存  OK,此时还无法使用http下载</span></span><br><span class="line"><span class="built_in">cd</span>  /home/fdfs_storage/data/00/00  <span class="comment">#查看是否存在wKghb1vqf7GAIdYqAAJo1aj_C9s003_big.jpg</span></span><br></pre></td></tr></table></figure>

<h1 id="6-FastDFS-和Nginx整合"><a href="#6-FastDFS-和Nginx整合" class="headerlink" title="6.FastDFS 和Nginx整合"></a>6.FastDFS 和Nginx整合</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#解压 fastdfs-nginx-module 到 /usr/local目录下；</span></span><br><span class="line"><span class="built_in">cd</span> /download</span><br><span class="line">unzip  fastdfs-nginx-module-master.zip </span><br><span class="line">mv fastdfs-nginx-module-master  /usr/<span class="built_in">local</span>/fastdfs-nginx-module</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/fastdfs-nginx-module/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改config文件</span></span><br><span class="line"><span class="comment"># 将文件中的所有 /usr/local/ 路径改为 /usr/ , </span></span><br><span class="line"><span class="comment">#如果后面步骤中编译nginx报错把下面两项做以下修改</span></span><br><span class="line">ngx_module_incs=<span class="string">"/usr/include/fastdfs /usr/include/fastcommon/"</span></span><br><span class="line">CORE_INCS=<span class="string">"<span class="variable">$CORE_INCS</span> /usr/include/fastdfs /usr/include/fastcommon/"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝配置文件到/etc/fdfs</span></span><br><span class="line">cp mod_fastdfs.conf  /etc/fdfs/</span><br><span class="line"> <span class="comment">#修改 /etc/fdfs/mod_fastdfs.conf ；</span></span><br><span class="line"> vi /etc/fdfs/mod_fastdfs.conf</span><br><span class="line"><span class="comment">#======修改以下内容========</span></span><br><span class="line">base_path=/home/fastdfs  <span class="comment">#保存日志的路径</span></span><br><span class="line">tracker_server=192.168.33.111:22122  <span class="comment">#track_server配置的服务端口</span></span><br><span class="line">url_have_group_name=<span class="literal">true</span>        <span class="comment">#url中是否包含group名称</span></span><br><span class="line">store_path0=/home/fdfs_storage  <span class="comment">#指定文件存储路径（必须和storage.conf配置相同）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -zxvf nginx-1.14.0.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="comment">#进入解压目录, 日志目录可自己定义,主要是add-modoule</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx-1.14.0</span><br><span class="line"><span class="comment">#添加模块</span></span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/<span class="built_in">local</span>/nginx \</span><br><span class="line">--add-module=/usr/<span class="built_in">local</span>/fastdfs-nginx-module/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#在nginx1.14.0目录下执行</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vi /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line"><span class="comment">#======添加配置===========</span></span><br><span class="line"> server &#123;</span><br><span class="line">              listen 80;</span><br><span class="line">              server_name 192.168.33.111;</span><br><span class="line">              location /group1/M00/ &#123;</span><br><span class="line">                  root /home/fdfs_storage/data;</span><br><span class="line">                  ngx_fastdfs_module;</span><br><span class="line">              &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"> /usr/<span class="built_in">local</span>/nginx/sbin/nginx </span><br><span class="line"></span><br><span class="line"><span class="comment">#检查是否启动成功,不成功就去查看错误日志/var/log/nginx/error.log</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">/usr/bin/fdfs_test /etc/fdfs/client.conf upload  /download/123.jpg</span><br><span class="line">example file url: http://192.168.33.111/group1/M00/00/00/wKghb1vqf7GAIdYqAAJo1aj_C9s003_big.jpg</span><br><span class="line">http://1192.168.33.111/group1/M00/00/00/wKghb1vqf7GAIdYqAAJo1aj_C9s003_big.jpg</span><br><span class="line"><span class="comment">#查看nginx 日志可以看到访问记录</span></span><br><span class="line">tail -f  -n 100 /var/<span class="built_in">log</span>/nginx/access.log</span><br></pre></td></tr></table></figure>

<h1 id="7-项目中如何使用fastdfs"><a href="#7-项目中如何使用fastdfs" class="headerlink" title="7.项目中如何使用fastdfs"></a>7.项目中如何使用fastdfs</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;net.oschina.zcx7878&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastdfs-client-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.27.0.0&lt;/version&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">配置文件: fdfs.conf</span><br><span class="line"># 连接tracker服务器超时时长</span><br><span class="line">connect_timeout = <span class="number">10</span></span><br><span class="line"># socket连接超时时长</span><br><span class="line">network_timeout = <span class="number">30</span></span><br><span class="line"># 文件内容编码</span><br><span class="line">charset = UTF-<span class="number">8</span></span><br><span class="line"># tracker服务器端口</span><br><span class="line">http.tracker_http_port = <span class="number">80</span></span><br><span class="line">http.anti_steal_token = no</span><br><span class="line">#密码</span><br><span class="line">#http.secret_key = 123456</span><br><span class="line"># tracker服务器IP和端口（可以写多个）</span><br><span class="line">tracker_server = <span class="number">192.168</span><span class="number">.33</span><span class="number">.111</span>:<span class="number">22122</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zc;</span><br><span class="line"><span class="keyword">import</span> org.csource.fastdfs.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastdfsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、把FastDFS提供的jar包添加到工程中</span></span><br><span class="line">        <span class="comment">//2、初始化全局配置。加载一个配置文件。</span></span><br><span class="line">        ClientGlobal.init(<span class="string">"fdfs.conf"</span>);</span><br><span class="line">        <span class="comment">//3、创建一个TrackerClient对象。</span></span><br><span class="line">        TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4、创建一个TrackerServer对象。</span></span><br><span class="line">        TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">        <span class="comment">//5、声明一个StorageServer对象，null。</span></span><br><span class="line">        StorageServer storageServer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//6、获得StorageClient对象。</span></span><br><span class="line">        StorageClient storageClient = <span class="keyword">new</span> StorageClient(trackerServer, storageServer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7、直接调用StorageClient对象方法上传文件即可。</span></span><br><span class="line">        String[] result = storageClient.upload_file(<span class="string">"/Users/zc21/Downloads/img.jpg"</span>, <span class="string">"jpg"</span>, <span class="keyword">null</span>);</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">"http://192.168.33.111/"</span>);</span><br><span class="line">        sb.append(result[<span class="number">0</span>]).append(<span class="string">"/"</span>).append(result[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(<span class="string">"图片访问地址: "</span> + sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考地址：<a href="https://www.jianshu.com/p/e46535c239da" target="_blank" rel="noopener">https://www.jianshu.com/p/e46535c239da</a></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装mysql数据库</title>
    <url>/hexo/2020/04/04/install-mysql/</url>
    <content><![CDATA[<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p>1、上传</p>
<p>2、解压</p>
<p>3、安装</p>
<p>4、启动</p>
<h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><p>上传mysql-8.0.18-1.el7.x86_64.rpm-bundle.tar 数据库文件</p>
<p>查看原来有没有，并删除原来的mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa|grep mysql   <span class="comment">#查看原来mysql</span></span><br><span class="line">rpm -qa|grep mari	 <span class="comment">#查看原来mariadb</span></span><br><span class="line">rpm -e --nodeps mariadb-libs-5.5.52-1.el7.x86_64</span><br></pre></td></tr></table></figure>



<h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><p>找到自己上传的文件并解压</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xf mysql-8.0.18-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure>



<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>使用yum命令安装会自动安装必要的依赖，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum localinstall mysql-community-*	<span class="comment">#安装解压完成的文件</span></span><br></pre></td></tr></table></figure>

<p>安装完成后，mysql的root默认初始密码在 /var/log/mysqld.log文件中</p>
<blockquote>
<p><strong>注意</strong>：mysql版本不一样，密码位置不一样；mysql5密码位置在root目录下的<strong>.mysql_secret</strong>文件中</p>
<p>密码规则也不一样；mysql8密码必须是（数字+字母+大小写+特性字符）</p>
</blockquote>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status mysqld  <span class="comment"># 查看服务状态</span></span><br><span class="line">systemctl start mysqld   <span class="comment"># 启动服务</span></span><br><span class="line">systemctl stop  mysqld   <span class="comment"># 关闭服务</span></span><br><span class="line">systemctl restart mysqld   <span class="comment"># 重启服务</span></span><br></pre></td></tr></table></figure>

<p>进入mysql</p>
<p>mysql -root -p’密码’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set password for root@localhost &#x3D; password(&#39;123&#39;);【修改密码mysql5】</span><br><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;密码&#39;; 【修改密码】</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;Root@1234&#39;; 【mysql8变态修改密码不然连接工具连不上】</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to &#39;root&#39; @&#39;%&#39; identified by &#39;root&#39;;【允许远程登录】</span><br><span class="line"></span><br><span class="line">create database userDB;		【创建数据库】</span><br><span class="line">create user &#39;username&#39;@&#39;%&#39; IDENTIFIED BY &#39;root1234&#39;;【创建用户】</span><br><span class="line">GRANT all ON userDB.* TO &#39;username&#39;@&#39;localhost&#39;;【授权用户】</span><br><span class="line">flush privileges;【刷新权限表】</span><br><span class="line">drop user &#39;username&#39;@&#39;localhost&#39;;【删除用户】</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装nginx服务端</title>
    <url>/hexo/2020/04/20/install-nginx/</url>
    <content><![CDATA[<h1 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1.安装依赖包"></a><strong>1.安装依赖包</strong></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//一键安装下面四个依赖</span><br><span class="line">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h1 id="2-下载并解压安装包"><a href="#2-下载并解压安装包" class="headerlink" title="2.下载并解压安装包"></a><strong>2.下载并解压安装包</strong></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//下载tar包</span><br><span class="line">wget http://nginx.org/download/nginx-1.13.7.tar.gz</span><br><span class="line">tar -xvf nginx-1.13.7.tar.gz</span><br></pre></td></tr></table></figure>

<h1 id="3-安装nginx"><a href="#3-安装nginx" class="headerlink" title="3.安装nginx"></a><strong>3.安装nginx</strong></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//进入解压后目录</span><br><span class="line">//执行命令</span><br><span class="line">./configure</span><br><span class="line">//执行make命令</span><br><span class="line">make</span><br><span class="line">//执行make install命令四、启动，运行</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p> 这样安装没有指定安装路径，则默认安装在<code>/usr/local/nginx</code>目录，也可以指定安装目录，</p>
<p>如：   <em>./configure –prefix=/root/hbk/nginx2/</em> </p>
<h1 id="4、配置文件"><a href="#4、配置文件" class="headerlink" title="4、配置文件"></a><strong>4、配置文件</strong></h1><p>进到安装目录 /usr/local/nginx/conf/</p>
<p>配置自己想要代理的东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  localhost;</span><br><span class="line">       location &#x2F;ffress &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;localhost:8080;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            root   html&#x2F;hexo;</span><br><span class="line">            index  index.html index.jsp;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h1 id="5、启动，运行"><a href="#5、启动，运行" class="headerlink" title="5、启动，运行"></a><strong>5、启动，运行</strong></h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进到安装目录 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;</span><br><span class="line">&#x2F;&#x2F; 启动</span><br><span class="line">.&#x2F;nginx </span><br><span class="line">&#x2F;&#x2F; 停止</span><br><span class="line">.&#x2F;nginx -s stop</span><br><span class="line">&#x2F;&#x2F; 重新加载配置文件</span><br><span class="line">.&#x2F;nginx -s reload</span><br></pre></td></tr></table></figure>

<h1 id="6、nginx日志按日分割"><a href="#6、nginx日志按日分割" class="headerlink" title="6、nginx日志按日分割"></a><strong>6、nginx日志按日分割</strong></h1><p>在对应的server下增加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  localhost;</span><br><span class="line">       #日志按日分割</span><br><span class="line">      if ($time_iso8601 ~ &quot;^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)T(\d&#123;2&#125;):(\d&#123;2&#125;):(\d&#123;2&#125;)&quot;)</span><br><span class="line">      &#123;</span><br><span class="line">          set $year $1;</span><br><span class="line">          set $month $2;</span><br><span class="line">          set $day $3;</span><br><span class="line">          set $hour $4;</span><br><span class="line">          set $minutes $5;</span><br><span class="line">          set $seconds $6;</span><br><span class="line">      &#125;</span><br><span class="line">access_log &#x2F;app&#x2F;logs&#x2F;api-access-$year-$month-$day.log main;</span><br><span class="line">  	error_log &#x2F;app&#x2F;logs&#x2F;api-error.log;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">       location &#x2F;ffress &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;localhost:8080;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            root   html&#x2F;hexo;</span><br><span class="line">            index  index.html index.jsp;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>操作类</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装git服务端</title>
    <url>/hexo/2020/04/04/install-git/</url>
    <content><![CDATA[<h1 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h1><p>下载地址： <a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a> </p>
<p>TortoiseGit下载：<a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">https://tortoisegit.org/download/</a></p>
<h1 id="安装git服务端"><a href="#安装git服务端" class="headerlink" title="安装git服务端"></a><strong>安装git服务端</strong></h1><h2 id="1、安装git服务环境准备"><a href="#1、安装git服务环境准备" class="headerlink" title="1、安装git服务环境准备"></a>1、安装git服务环境准备</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install curl curl-devel zlib-devel openssl-devel perl cpio expat-devel gettext-devel gcc cc</span><br></pre></td></tr></table></figure>

<h2 id="2、下载git-2-5-0-tar-gz"><a href="#2、下载git-2-5-0-tar-gz" class="headerlink" title="2、下载git-2.5.0.tar.gz"></a>2、下载git-2.5.0.tar.gz</h2><p>下载地址： <a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a> </p>
<p><del>下载地址：<a href="https://mirrors.edge.kernel.org/pub/software/scm/git/" target="_blank" rel="noopener">linux-git下载</a></del></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1）解压缩 </span><br><span class="line">	tar -xvf git-2.5.0.tar.gz</span><br><span class="line">2）进入解压目录</span><br><span class="line">	<span class="built_in">cd</span> git-2.5.0</span><br><span class="line">3）移除旧版本git：</span><br><span class="line">	yum remove git</span><br><span class="line">4）执行命令</span><br><span class="line">	autoconf</span><br><span class="line">        如果报错/bin/sh: autoconf: <span class="built_in">command</span> not found：</span><br><span class="line">        安装libtool即可：yum install  autoconf automake libtool</span><br><span class="line">5）./configure</span><br><span class="line"></span><br><span class="line">6）make</span><br><span class="line">	报错：Can<span class="string">'t locate ExtUtils/MakeMaker.pm in @INC (@INC contains:'</span></span><br><span class="line">	解决：yum install perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker</span><br><span class="line">7）make install</span><br><span class="line"></span><br><span class="line">8）查看版本： git --version</span><br><span class="line">	报错：-bash: /usr/bin/git: No such file or directory</span><br><span class="line">	解决：事先卸载的旧的git路径为/usr/bin/git，然后新安装的git在/usr/<span class="built_in">local</span>/bin下，终端session保存了原来的路径，重新打开新的终端即可解决</span><br></pre></td></tr></table></figure>



<h2 id="3、添加用户"><a href="#3、添加用户" class="headerlink" title="3、添加用户"></a>3、添加用户</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ groupadd git</span><br><span class="line">$ useradd git -g git</span><br></pre></td></tr></table></figure>

<h2 id="4、设置密码"><a href="#4、设置密码" class="headerlink" title="4、设置密码"></a>4、设置密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd git</span><br><span class="line">输入两次密码</span><br></pre></td></tr></table></figure>

<h2 id="5、切换到git用户"><a href="#5、切换到git用户" class="headerlink" title="5、切换到git用户"></a>5、切换到git用户</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure>

<h2 id="6、创建git仓库"><a href="#6、创建git仓库" class="headerlink" title="6、创建git仓库"></a>6、创建git仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --bare init /home/git/first</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：如果不使用“–bare”参数，初始化仓库后，提交master分支时报错。这是由于git默认拒绝了push操作，需要.git/config添加如下代码：</p>
<p>[receive]</p>
<p>denyCurrentBranch = ignore</p>
</blockquote>
<blockquote>
<p>推荐使用：git –bare init初始化仓库。</p>
</blockquote>
<h2 id="7、禁用shell登录"><a href="#7、禁用shell登录" class="headerlink" title="7、禁用shell登录"></a>7、禁用shell登录</h2><p>（为安全考虑，git用户不允许登录shell）</p>
<blockquote>
<p>注意：要先创建好仓库再禁止，因为禁止后登陆不了git用户</p>
<p>但可以使用root用户创建并授权  chown -R  git:git  /home/git/first</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">把公钥上传到git用户/.ssh目录下并授权</span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改/etc/passwd</span></span><br><span class="line">$ vim /etc/passwd</span><br><span class="line"><span class="comment">#找到git的用户设置 如：</span></span><br><span class="line">git:x:1001:1001::/home/git:/bin/bash</span><br><span class="line">改为</span><br><span class="line">git:x:502:503::/home/git:/bin/git-shell</span><br><span class="line"><span class="comment">#这样用户用git账户ssh连接后只能使用git命令了</span></span><br></pre></td></tr></table></figure>

<p>克隆推送路径： git clone git@your_host_name:/home/git/first</p>
<h2 id="8、将hexo部署到自己服务器并自动发布"><a href="#8、将hexo部署到自己服务器并自动发布" class="headerlink" title="8、将hexo部署到自己服务器并自动发布"></a>8、将hexo部署到自己服务器并自动发布</h2><p>找到服务项目的 Hooks 文件夹下，创建脚本自动执行，名字必须是这个 <strong>post-receive</strong> （ 这个 hook 会在整个 git 操作过程完结以后被运行）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">GIT_REPO=/home/git/hexo    <span class="comment">#仓库地址</span></span><br><span class="line">PUBLIC_WWW=/srv/project/blog <span class="comment">#发布位置</span></span><br><span class="line"></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>	<span class="comment">#删除原来的</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$PUBLIC_WWW</span> <span class="comment">#克隆新的</span></span><br></pre></td></tr></table></figure>

<p>授权对应文件夹授权很重要</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chown -R root:git /srv/project/blog</span><br><span class="line">chmod -R g+w /srv/project/blog</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>操作类</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux静默安装oracle11g</title>
    <url>/hexo/2020/04/05/install-oracle/</url>
    <content><![CDATA[<p>linux安装oracle数据库</p>
<h1 id="大致步骤："><a href="#大致步骤：" class="headerlink" title="大致步骤："></a>大致步骤：</h1><p>​    1、linux初始配置（内存，交换空间等）<br>​    2、安装oracle需要的依赖<br>​    3、linux创建所需的oracle操作系统组和用户<br>​    4、修改linux内核参数<br>​    5、修改oracle用户限制<br>​    6、设置oracle用户环境变量<br>​    7、上传并解压oracle安装文件<br>​    8、修改静默安装Oracle软件脚本参数配置（装软件）<br>​    9、修改静默安装数据库（创建数据库）<br>​    10、修改oracle用户启动配置文件，启动/关闭</p>
<h1 id="一、linux初始配置（内存，交换空间等）"><a href="#一、linux初始配置（内存，交换空间等）" class="headerlink" title="一、linux初始配置（内存，交换空间等）"></a>一、linux初始配置（内存，交换空间等）</h1><p>​    1.硬件检测：<br>​    物理内存不少于1G<br>​    硬盘可以空间不少于5G<br>​    swap分区空间不少于2G</p>
<pre><code>首先检查物理内存的大小[free]
grep MemTotal /proc/meminfo
检查交换分区内存大小 
grep SwapTotal /proc/meminfo

分配交换空间，oracle的要求交换分区的大小一般为物理内存大小的一点五到两倍
在root用户下  
dd if=/dev/zero of=/swapadd bs=1024 count=2825586
mkswap /swapadd
swapon /swapadd
在/etc/fstab添加,否则重启系统虚拟空间会消失
    /swapadd swap swap defaults 0 0
或
    echo &quot;/swapadd swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab
再看看是否分配完成，检查交换分区内存大小 
grep SwapTotal /proc/meminfo
（修改主机名  hostnamectl set-hostname myhostname）</code></pre><h1 id="二、安装oracle需要的依赖"><a href="#二、安装oracle需要的依赖" class="headerlink" title="二、安装oracle需要的依赖"></a>二、安装oracle需要的依赖</h1><p>​    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install binutils compat-libstdc++-33 compat-libstdc++ elfutils-libelf elfutils-libelf-devel gcc gcc-c++ glibc glibc-common glibc-devel glibc-headers ksh libaio libaio-devel libgcc libstdc++ libstdc++-devel make sysstat unixODBC unixODBC-devel</span><br></pre></td></tr></table></figure>

<h1 id="三、创建所需的操作系统组和用户"><a href="#三、创建所需的操作系统组和用户" class="headerlink" title="三、创建所需的操作系统组和用户"></a>三、创建所需的操作系统组和用户</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	groupadd oinstall</span><br><span class="line">​	groupadd dba</span><br><span class="line">​	useradd -g oinstall -G dba oracle</span><br><span class="line">​	设置oracle用户密码</span><br><span class="line">​	passwd oracle</span><br><span class="line">​	然后就一直输入密码假设为 oracle 它可能会提示你不符合oracle规定 别理他</span><br></pre></td></tr></table></figure>



<h1 id="四、修改linux内核参数"><a href="#四、修改linux内核参数" class="headerlink" title="四、修改linux内核参数"></a>四、修改linux内核参数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在&#x2F;etc&#x2F;sysctl.conf 文件中，使用文本编辑器或vi命令增加或修改以下参数</span><br><span class="line">​	fs.aio-max-nr &#x3D; 1048576</span><br><span class="line">​	fs.file-max &#x3D; 6815744</span><br><span class="line">​	kernel.shmall &#x3D; 2097152</span><br><span class="line">​	kernel.shmmax &#x3D; 536870912</span><br><span class="line">​	kernel.shmmni &#x3D; 4096</span><br><span class="line">​	kernel.sem &#x3D; 250 32000 100 128</span><br><span class="line">​	net.ipv4.ip_local_port_range &#x3D; 9000 65500</span><br><span class="line">​	net.core.rmem_default &#x3D; 262144</span><br><span class="line">​	net.core.rmem_max &#x3D; 4194304</span><br><span class="line">​	net.core.wmem_default &#x3D; 262144</span><br><span class="line">​	net.core.wmem_max &#x3D; 1048576</span><br><span class="line">​	参数解析：</span><br><span class="line">​	&#123;</span><br><span class="line">​		shmmax&#x3D;物理内存*80%*80%，单位是字节</span><br><span class="line">​		kernel.shmmax：表示单个共享内存段的最大值，以字节为单位，此值一般为物理内存的一半，不过大一点也没关系，这里设定的为4GB，即“4294967295&#x2F;1024&#x2F;1024&#x2F;1024&#x3D;4G”。</span><br><span class="line">​		kernel.shmmin：表示单个共享内存段的最小值，默认为1byte</span><br><span class="line">​		kernel.shmall：表示整个系统范围内可用共享内存页的总量，单位是页（page），在32位系统上一页等于4kB，也就是4096字节。计算公式是：shmmax&#x2F;PAGE_SIZE</span><br><span class="line">​		kernel.shmmni：表示整个系统范围内内存段的最大数量，一般为4096.</span><br><span class="line">​		ip_local_port_range  ：表示端口的范围。在监听器帮助客户端进程和服务器进程建立连接时，会用到指定范围内的端口。</span><br><span class="line">​		kernel.sem  ：表示设置的信号量，这4个参数内容大小固定。</span><br><span class="line">​		net.core.rmem_default  ：表示接收套接字缓冲区大小的缺省值（以字节为单位）。</span><br><span class="line">​		net.core.rmem_max  ：表示接收套接字缓冲区大小的最大值（以字节为单位）</span><br><span class="line">​		net.core.wmem_default  ：表示发送套接字缓冲区大小的缺省值（以字节为单位）。</span><br><span class="line">​		net.core.wmem_max  ：表示发送套接字缓冲区大小的最大值（以字节为单位）。</span><br><span class="line">​	&#125;</span><br><span class="line">​	修改后，使设置生效</span><br><span class="line">​	&#x2F;sbin&#x2F;sysctl -p</span><br></pre></td></tr></table></figure>



<h1 id="五、修改用户限制"><a href="#五、修改用户限制" class="headerlink" title="五、修改用户限制"></a>五、修改用户限制</h1><p>​    在/etc/security/limits.conf 文件中，使用文本编辑器或vi命令增加或修改以下参数​</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	oracle soft nproc 2047</span><br><span class="line">​	oracle hard nproc 16384</span><br><span class="line">​	oracle soft nofile 1024</span><br><span class="line">​	oracle hard nofile 65536</span><br><span class="line">​	oracle soft stack 10240</span><br><span class="line">​	oracle hard stack 10240</span><br></pre></td></tr></table></figure>

<pre><code>在/etc/pam.d/login 文件中，使用文本编辑器或vi命令增加或修改以下内容
session required /lib64/security/pam_limits.so
session required pam_limits.so

在/etc/profile 文件中，使用文本编辑器或vi命令增加或修改以下内容
if [ $USER = &quot;oracle&quot; ]; then
if [ $SHELL = &quot;/bin/ksh&quot; ]; then
ulimit -p 16384
ulimit -n 65536
else
ulimit -u 16384 -n 65536
fi
fi

使设置生效
source /etc/profile</code></pre><h1 id="六、设置oracle用户环境变量"><a href="#六、设置oracle用户环境变量" class="headerlink" title="六、设置oracle用户环境变量"></a>六、设置oracle用户环境变量</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	创建安装目录(可根据情况，选择比较多空间的目录创建)</span><br><span class="line">​	mkdir -p &#x2F;home&#x2F;oracle&#x2F;app&#x2F;</span><br><span class="line">​	chown -R oracle:oinstall &#x2F;home&#x2F;oracle&#x2F;app&#x2F;</span><br><span class="line">​	chmod -R 775 &#x2F;home&#x2F;oracle&#x2F;app&#x2F;</span><br><span class="line"></span><br><span class="line">	设置oracle环境变量</span><br><span class="line">	切换用户</span><br><span class="line">	su oracle</span><br><span class="line">	修改vi ~&#x2F;.bash_profile</span><br><span class="line">	在最后加上以下内容</span><br><span class="line">	export ORACLE_BASE&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle</span><br><span class="line">	export ORACLE_SID&#x3D;orcl</span><br><span class="line">	使设置生效</span><br><span class="line">	source &#x2F;home&#x2F;oracle&#x2F;.bash_profile</span><br></pre></td></tr></table></figure>
<h1 id="七、上传并解压oracle安装文件"><a href="#七、上传并解压oracle安装文件" class="headerlink" title="七、上传并解压oracle安装文件"></a>七、上传并解压oracle安装文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	将oracle文件上传至&#x2F;home&#x2F;oracle&#x2F;</span><br><span class="line">​	解压</span><br><span class="line">​	unzip linux.x64_11gR2_database_1of2.zip</span><br><span class="line">​	unzip linux.x64_11gR2_database_2of2.zip</span><br></pre></td></tr></table></figure>



<h1 id="八、修改静默安装Oracle软件脚本参数配置（装软件）"><a href="#八、修改静默安装Oracle软件脚本参数配置（装软件）" class="headerlink" title="八、修改静默安装Oracle软件脚本参数配置（装软件）"></a>八、修改静默安装Oracle软件脚本参数配置（装软件）</h1><p>​    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改安装Oracle软件的响应文件&#x2F;home&#x2F;oracle&#x2F;database&#x2F;response&#x2F;db_install.rsp</span><br><span class="line"></span><br><span class="line">​	vim显示行数：进入vim后命令 :set nu</span><br><span class="line"></span><br><span class="line">​	oracle.install.option&#x3D;INSTALL_DB_SWONLY  &#x2F;&#x2F;29 行 安装类型 1.只装数据库软件 2.安装数据库软件并建库 3.升级数据库</span><br><span class="line">​	ORACLE_HOSTNAME&#x3D;myhostname &#x2F;&#x2F;37 行  主机名称 hostname查看</span><br><span class="line">​	UNIX_GROUP_NAME&#x3D;oinstall &#x2F;&#x2F;42 行 安装组</span><br><span class="line">​	INVENTORY_LOCATION&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oraInventory &#x2F;&#x2F;47 行 INVENTORY目录</span><br><span class="line">​	SELECTED_LANGUAGES&#x3D;en,zh_CN,zh_TW &#x2F;&#x2F;78 行 选择语言</span><br><span class="line">​	ORACLE_HOME&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1&#x2F;&#x2F;83 行 oracle_home</span><br><span class="line">​	ORACLE_BASE&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle &#x2F;&#x2F;88 行 oracle_base</span><br><span class="line">​	oracle.install.db.InstallEdition&#x3D;EE &#x2F;&#x2F;99 行 oracle版本，企业版，标准版，标准版1</span><br><span class="line">​	oracle.install.db.isCustomInstall&#x3D;true  &#x2F;&#x2F;108行 自定义安装</span><br><span class="line">​	oracle.install.db.DBA_GROUP&#x3D;dba &#x2F;&#x2F;142行 dba用户组</span><br><span class="line">​	oracle.install.db.OPER_GROUP&#x3D;oinstall &#x2F;&#x2F;147行 oper用户组</span><br><span class="line">​	oracle.install.db.config.starterdb.type&#x3D;GENERAL_PURPOSE &#x2F;&#x2F;160行 数据库类型</span><br><span class="line">​	oracle.install.db.config.starterdb.globalDBName&#x3D;orcl &#x2F;&#x2F;165行 globalDBName</span><br><span class="line">​	oracle.install.db.config.starterdb.SID&#x3D;orcl  &#x2F;&#x2F;170行 SID</span><br><span class="line">​	oracle.install.db.config.starterdb.memoryLimit&#x3D;512 &#x2F;&#x2F;192行 自动管理内存的最小内存(M)</span><br><span class="line">​	oracle.install.db.config.starterdb.password.ALL&#x3D;oracle &#x2F;&#x2F;233行 设定所有数据库用户使用同一个密码</span><br><span class="line">​	DECLINE_SECURITY_UPDATES&#x3D;true &#x2F;&#x2F;385行 设置安全更新</span><br></pre></td></tr></table></figure>

<p>进行静默安装Oracle软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd database	</span><br><span class="line">	【.&#x2F;runInstaller -silent -responseFile &#x2F;home&#x2F;oracle&#x2F;etc&#x2F;db_install.rsp -ignorePrereq】</span><br><span class="line">	.&#x2F;runInstaller -silent -force -responseFile &#x2F;home&#x2F;oracle&#x2F;database&#x2F;response&#x2F;db_install.rsp -ignorePrereq</span><br><span class="line">	安装中，如果提示[WARNING]不必理会，此时安装程序仍在进行，如果出现[FATAL]，则安装程序已经停止了。等待过程可回车查看日志。</span><br><span class="line">	安装过程耐心等待，安装完成会出现。</span><br><span class="line">		You can find the log of this install session at:</span><br><span class="line">		 &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oraInventory&#x2F;logs&#x2F;installActions2020-03-14_02-05-25PM.log</span><br><span class="line">		The following configuration scripts need to be executed as the &quot;root&quot; user.</span><br><span class="line">		 #!&#x2F;bin&#x2F;sh</span><br><span class="line">		 #Root scripts to run</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">		&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oraInventory&#x2F;orainstRoot.sh</span><br><span class="line">		&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1&#x2F;root.sh</span><br><span class="line">		To execute the configuration scripts:</span><br><span class="line">		         1. Open a terminal window</span><br><span class="line">		         2. Log in as &quot;root&quot;</span><br><span class="line">		         3. Run the scripts</span><br><span class="line">		                  4. Return to this window and hit &quot;Enter&quot; key to continue</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">Successfully Setup Software.</span><br><span class="line">	</span><br><span class="line">安装完切换root用户运行</span><br><span class="line">&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oraInventory&#x2F;orainstRoot.sh</span><br><span class="line">&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1&#x2F;root.sh</span><br><span class="line">	</span><br><span class="line">修改 oracel 用户.bash_profile</span><br><span class="line">	export ORACLE_BASE&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle</span><br><span class="line">	export ORACLE_SID&#x3D;orcl</span><br><span class="line">	export ORACLE_HOME&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1&#x2F;</span><br><span class="line">	export PATH&#x3D;$ORACLE_HOME&#x2F;bin:$PATH</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">静默配置网络</span><br><span class="line">$ORACLE_HOME&#x2F;bin&#x2F;netca &#x2F;silent &#x2F;responseFile &#x2F;home&#x2F;oracle&#x2F;etc&#x2F;netca.rsp</span><br></pre></td></tr></table></figure>



<h1 id="九、修改静默安装数据库（创建数据库）"><a href="#九、修改静默安装数据库（创建数据库）" class="headerlink" title="九、修改静默安装数据库（创建数据库）"></a>九、修改静默安装数据库（创建数据库）</h1><pre><code>修改仅安装数据库的响应文件/home/oracle/etc/dbca.rsp
GDBNAME=&quot;orcl.oracle&quot; //78 行 全局数据库的名字=SID 主机域名
SID=&quot;orcl&quot; //149行 SID
SYSPASSWORD = &quot;oracle&quot; //190行 SYSPASSWORD 
SYSTEMPASSWORD = &quot;oracle&quot; //200行 SYSTEMPASSWORD 
CHARACTERSET=&quot;AL32UTF8&quot; //415行 编码
NATIONALCHARACTERSET=&quot;UTF8&quot; //425行 编码
进行静默安装数据库
$ORACLE_HOME/bin/dbca -silent -responseFile /home/oracle/etc/dbca.rsp

建库后监听检查
lsnrctl status</code></pre><h1 id="十、修改oracle用户启动配置文件，启动-关闭"><a href="#十、修改oracle用户启动配置文件，启动-关闭" class="headerlink" title="十、修改oracle用户启动配置文件，启动/关闭"></a>十、修改oracle用户启动配置文件，启动/关闭</h1><p>​    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;oratab</span><br><span class="line">	orcl:&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1:Y &#x2F;&#x2F;把“N”改成“Y”</span><br><span class="line">	这样就可以通过dbstart 启动此实例，监听器。</span><br><span class="line">	dbstart $ORACLE_HOME</span><br><span class="line">	此时所有oracle的进程关闭，监听器也停止。</span><br><span class="line">	dbshut $ORACLE_HOME</span><br><span class="line">	再次查看监听器状态。</span><br><span class="line">	lsnrctl status</span><br></pre></td></tr></table></figure>

<h1 id="十一、进入oracle数据库"><a href="#十一、进入oracle数据库" class="headerlink" title="十一、进入oracle数据库"></a>十一、进入oracle数据库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#以管理员身份登陆</span></span><br><span class="line">sqlplus / as sysdba</span><br><span class="line">select * from tab;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动实例时，如果出现错误</span></span><br><span class="line">SQL&gt; startup;</span><br><span class="line">ORA-00845: MEMORY_TARGET not supported on this system</span><br><span class="line">root用户执行：mount -o remount,size=2G /dev/shm/	</span><br><span class="line"></span><br><span class="line">startup mount;</span><br><span class="line">出现错误：ORA-01102: cannot mount database <span class="keyword">in</span> EXCLUSIVE mode</span><br><span class="line">出现错误：ORA-00205: error <span class="keyword">in</span> identifying control file, check alert <span class="built_in">log</span> <span class="keyword">for</span> more info   : (</span><br><span class="line"><span class="comment">#清除信号量，清除共享内存，清除锁文件</span></span><br><span class="line">说明Oracle被异常关闭时，有资源没有被释放，一般有以下几种可能，</span><br><span class="line">	1、 Oracle的共享内存段或信号量没有被释放；</span><br><span class="line">		查看共享内存段</span><br><span class="line">		<span class="comment"># ipcs -map</span></span><br><span class="line">		根据ID号清楚共享内存段	</span><br><span class="line">		<span class="comment">#ipcrm –m 1409040</span></span><br><span class="line">		查看信号量</span><br><span class="line">		<span class="comment"># ipcs -s</span></span><br><span class="line">		清除oracle的信号量</span><br><span class="line">		<span class="comment"># ipcrm -s 360448</span></span><br><span class="line">	2、 Oracle的后台进程（如SMON、PMON、DBWn等）没有被关闭；</span><br><span class="line">		如果是Oracle进程没有关闭，<span class="variable">$kill</span> -9 &lt;PID&gt;</span><br><span class="line">	3、 用于锁内存的文件lk&lt;sid&gt;和sgadef&lt;sid&gt;.dbf文件没有被删除。</span><br><span class="line">		<span class="built_in">cd</span> <span class="variable">$ORACLE_HOME</span>/dbs  删除 rm  lkORCL文件</span><br><span class="line"><span class="comment">#参考地址 https://blog.csdn.net/lzwgood/article/details/26368323</span></span><br></pre></td></tr></table></figure>

<p>参考链接：<br>    1）<a href="http://blog.sina.com.cn/s/blog_e85f09cb0102w507.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_e85f09cb0102w507.html</a><br>    2）<a href="https://www.cnblogs.com/it1992/p/9468124.html" target="_blank" rel="noopener">https://www.cnblogs.com/it1992/p/9468124.html</a></p>
<h1 id="Oracle-操作："><a href="#Oracle-操作：" class="headerlink" title="Oracle 操作："></a>Oracle 操作：</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看文件位置</span><br><span class="line">select name from v$datafile;</span><br><span class="line">select name from v$tempfile;</span><br><span class="line">创建临时表空间</span><br><span class="line">create temporary tablespace 【名称】  tempfile &#39;C:\user_temp.dbf【位置】&#39; size 50m  autoextend on next 50m maxsize 20480m extent management local; </span><br><span class="line">create temporary tablespace myoracle_temp_space tempfile &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;orcl&#x2F;myoracle_temp_space.dbf&#39; size 10m autoextend on next 32m maxsize 500m extent management local; </span><br><span class="line"></span><br><span class="line">创建表空间</span><br><span class="line">CREATE TABLESPACE 【名称】 LOGGING DATAFILE &#39;【位置】&#39;SIZE 10M AUTOEXTEND ON NEXT 32M MAXSIZE 500M EXTENT MANAGEMENT LOCAL;</span><br><span class="line">CREATE TABLESPACE myoracle_space LOGGING DATAFILE &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;orcl&#x2F;myoracle_space.dbf&#39;SIZE 10M AUTOEXTEND ON NEXT 32M MAXSIZE 500M EXTENT MANAGEMENT LOCAL;</span><br><span class="line"></span><br><span class="line">表空间重命名</span><br><span class="line">alter tablespace myoracle_space rename to myoracle_space2; </span><br><span class="line"></span><br><span class="line">创建用户</span><br><span class="line">create user myoracle identified by myoracle;</span><br><span class="line"></span><br><span class="line">修改默认表空间</span><br><span class="line">alter user myoracle default tablespace myoracle_space;</span><br><span class="line">alter user myoracle default tablespace myoracle_space temporary tablespace myoracle_temp_space;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看用户</span><br><span class="line">select username,default_tablespace,account_status from dba_users;</span><br><span class="line">&#x2F;&#x2F;解锁用户</span><br><span class="line">alter user myoracle account unlock&#x2F;lock;</span><br><span class="line">&#x2F;&#x2F;授权</span><br><span class="line">grant connect,resource,dba to myorcl;</span><br><span class="line"></span><br><span class="line">删除用户语句</span><br><span class="line">drop user 用户名 cascade;</span><br><span class="line">删除空的表空间，但是不包含物理文件</span><br><span class="line">drop tablespace tablespace_name;</span><br><span class="line">删除非空表空间，但是不包含物理文件</span><br><span class="line">drop tablespace tablespace_name including contents;</span><br><span class="line">删除空表空间，包含物理文件</span><br><span class="line">drop tablespace tablespace_name including datafiles; </span><br><span class="line">删除非空表空间，包含物理文件</span><br><span class="line">drop tablespace tablespace_name including contents and datafiles;</span><br><span class="line">如果其他表空间中的表有外键等约束关联到了本表空间中的表的字段，就要加上CASCADE CONSTRAINTS</span><br><span class="line">drop tablespace tablespace_name including contents and datafiles CASCADE CONSTRAINTS;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">本地链接oracle</span><br><span class="line">客户的编码【添加到环境变量NLS_LANG&#x3D;AMERICAN_AMERICA.AL32UTF8】</span><br><span class="line">用到instantclient_12_1文件夹【添加到path环境变量】</span><br><span class="line">链接工具PLSQldev8.0配置指向instantclient_12_1</span><br><span class="line">新建tnsnames.ora内容【添加到环境变量TNS_ADMIN&#x3D;D:\Software\Oralce】</span><br><span class="line">MYORACLE &#x3D;</span><br><span class="line">  (DESCRIPTION &#x3D;</span><br><span class="line">    (ADDRESS_LIST &#x3D;</span><br><span class="line">      (ADDRESS &#x3D; (PROTOCOL &#x3D; TCP)(HOST &#x3D; 119.23.60.163)(PORT &#x3D; 1521))</span><br><span class="line">    )</span><br><span class="line">    (CONNECT_DATA &#x3D;</span><br><span class="line">      (SERVICE_NAME &#x3D; orcl)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">查看字符集</span><br><span class="line">select userenv(&#39;language&#39;) from dual;</span><br><span class="line">修改字符集？</span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup mount;</span><br><span class="line">SQL&gt; alter system enable restricted session;</span><br><span class="line">SQL&gt; alter system set job_queue_processes&#x3D;0;</span><br><span class="line">SQL&gt; alter system set aq_tm_processes&#x3D;0;</span><br><span class="line">sql&gt; alter database open;</span><br><span class="line">SQL&gt; alter database character set internal_use 你要的编码集;#比如ZHS16GBK</span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot跨域问题几种后端解决方案</title>
    <url>/hexo/2020/04/20/springboot-CorsFilter/</url>
    <content><![CDATA[<h1 id="1、配置重新生成新的CorsFilter-全局跨域"><a href="#1、配置重新生成新的CorsFilter-全局跨域" class="headerlink" title="1、配置重新生成新的CorsFilter(全局跨域)"></a>1、配置重新生成新的CorsFilter(全局跨域)</h1><p> 通过导入配置重新生成新的CorsFilter(全局跨域) </p>
<p>以配置类的方式进行允许跨域请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eno.config.mvc;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> CorsConfiguration <span class="title">corsConfiguration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		CorsConfiguration corsConfiguration = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">		<span class="comment">// 1允许任何域名使用</span></span><br><span class="line">		corsConfiguration.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">		<span class="comment">// 2允许任何头</span></span><br><span class="line">		corsConfiguration.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">		<span class="comment">// 3允许任何方法（post、get等）</span></span><br><span class="line">		corsConfiguration.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">		<span class="keyword">return</span> corsConfiguration;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> CorsFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">		source.registerCorsConfiguration(<span class="string">"/**"</span>, corsConfiguration());</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> CorsFilter(source);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2、-继承重写WebMvcConfigurer（全局跨域）"><a href="#2、-继承重写WebMvcConfigurer（全局跨域）" class="headerlink" title="2、 继承重写WebMvcConfigurer（全局跨域）"></a>2、 继承重写WebMvcConfigurer（全局跨域）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springbooot.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">		registry</span><br><span class="line">				.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">				.allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">				.allowedHeaders(<span class="string">"*"</span>)</span><br><span class="line">				.allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">				.allowedMethods(<span class="string">"*"</span>)</span><br><span class="line">				.maxAge(<span class="number">3600</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="3、使用过滤器（全局跨域）"><a href="#3、使用过滤器（全局跨域）" class="headerlink" title="3、使用过滤器（全局跨域）"></a>3、使用过滤器（全局跨域）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res, FilterChain chain)</span></span></span><br><span class="line"><span class="function">			<span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">		HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line">		response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">		response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST, GET, OPTIONS, DELETE"</span>);</span><br><span class="line">		response.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"3600"</span>);</span><br><span class="line">		response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"x-requested-with"</span>);</span><br><span class="line">		<span class="comment">//log.error("*********************************过滤器被使用**************************");</span></span><br><span class="line">		chain.doFilter(req, res);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="4、使用注解作用到具体controller或者method上面（局部跨域）"><a href="#4、使用注解作用到具体controller或者method上面（局部跨域）" class="headerlink" title="4、使用注解作用到具体controller或者method上面（局部跨域）"></a>4、使用注解作用到具体controller或者method上面（局部跨域）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  在方法上（<span class="doctag">@RequestMapping</span>）使用注解 <span class="doctag">@CrossOrigin</span> </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@CrossOrigin</span>(<span class="string">"http://localhost:8080"</span>) </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">( )</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 或者在控制器（<span class="doctag">@Controller</span>）上使用注解 <span class="doctag">@CrossOrigin</span></span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@CrossOrigin</span>(origins = <span class="string">"http://www.xxxxx.com"</span>, maxAge = <span class="number">3600</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123; </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">( )</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="5、手工设置响应头（局部跨域-）"><a href="#5、手工设置响应头（局部跨域-）" class="headerlink" title="5、手工设置响应头（局部跨域 ）"></a>5、手工设置响应头（局部跨域 ）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">    response.addHeader(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"http://localhost:8080"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p> 注意：如果使用了局部跨域是会覆盖全局跨域的规则，所以可以通过@CrossOrigin注解来进行细粒度更高的跨域资源控制。 </p>
</blockquote>
]]></content>
      <categories>
        <category>技术类</category>
      </categories>
      <tags>
        <tag>springboot</tag>
      </tags>
  </entry>
</search>
